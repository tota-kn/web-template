AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: web-template-back

Parameters:
  Stage:
    Type: String
    AllowedValues: [local, dev, prod]
    Default: local

Mappings:
  StageMap:
    local:
      frontBaseUrl: web-template-back_local
    dev:
      frontBaseUrl: web-template-back_dev
    prod:
      frontBaseUrl: web-template-back_prod

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: nodejs20.x
    Architectures:
      - arm64
    Environment:
      Variables:
        STAGE: !Ref Stage
        FRONT_BASE_URL: !FindInMap [StageMap, !Ref Stage, frontBaseUrl]
    Tags:
      id: "web-template-back"
      Stage: !Ref Stage

Resources:
  # API Gateway
  WebTemplateBackApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "web-template-back_${Stage}"
      StageName: !Ref Stage
      OpenApiVersion: "3.0.3"
      EndpointConfiguration:
        Type: REGIONAL
      Tags:
        id: "web-template-back"
        Stage: !Ref Stage
      DefinitionBody:
        Fn::Transform:
          Name: "AWS::Include"
          Parameters:
            Location: "openapi.yml"
      Cors:
        AllowOrigin: !Join ["", ["'", !FindInMap [StageMap, !Ref Stage, frontBaseUrl], "'"]]
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"

  # Lambda
  TestFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "web-template-back_${Stage}_test-get"
      CodeUri: dist/test
      Handler: get.handler
      Events:
        WebTemplateBackApiEvent:
          Type: Api
          Properties:
            Path: /api/test
            Method: get
            RestApiId: !Ref WebTemplateBackApi
